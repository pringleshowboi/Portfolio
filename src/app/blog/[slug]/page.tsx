// src/app/blog/[slug]/page.tsx
import { PortableText } from '@portabletext/react'; 
// The import below might be causing an issue if the package isn't installed.
// We will replace 'PortableTextContent' with 'any' + a linter disable comment for now.
// import type { PortableTextContent } from '@portabletext/types'; 
import { sanityFetch, client, urlForImage } from '../../../utils/sanityClient'; 
import Image from 'next/image'; 
import { groq } from 'next-sanity'; 
import components from '../../components/BlogPortableText/PortableTextComponents'; 

// --- Configuration & Types ---

const postQuery = groq`
Â  Â  *[_type == "post" && slug.current == $slug][0] {
Â  Â  Â  Â  title,
Â  Â  Â  Â  slug,
Â  Â  Â  Â  publishedAt,
Â  Â  Â  Â  body,
Â  Â  Â  Â  mainImage {
Â  Â  Â  Â  Â  Â  asset->{_ref}, 
Â  Â  Â  Â  Â  Â  alt
Â  Â  Â  Â  }
Â  Â  }
`;

// Define the type for the data structure you expect from Sanity
interface Post {
Â  Â  title: string;
Â  Â  slug: { current: string };
Â  Â  publishedAt: string;
Â  Â  // ðŸ›‘ THE FIX: Use 'any' but disable the linter rule for this line.
Â  Â  body: any; // eslint-disable-line @typescript-eslint/no-explicit-any 
Â  Â  mainImage?: {
Â  Â  Â  Â  asset: {
Â  Â  Â  Â  Â  Â  _ref: string;
Â  Â  Â  Â  };
Â  Â  Â  Â  alt?: string;
Â  Â  };
}

// 2. Define static paths for Next.js build
// ... (generateStaticParams remains unchanged)
export async function generateStaticParams() {
Â  Â  const slugs: string[] = await client.fetch(
Â  Â  Â  Â  groq`*[_type == "post" && defined(slug.current)][].slug.current`
Â  Â  );
Â  Â  return slugs.map((slug) => ({ slug }));
}


export default async function BlogPostPage({ params }: { params: { slug: string } }) {
Â  Â  // 3. Fetch the post data
Â  Â  const post = await sanityFetch<Post>({
Â  Â  Â  Â  query: postQuery,
Â  Â  Â  Â  params: { slug: params.slug },
Â  Â  });

Â  Â  // ROBUST ERROR CHECK: Prevents ReferenceError if no post is found
Â  Â  if (!post) {
Â  Â  Â  Â  return <p className="text-red-500 p-8">ERROR 404: POST NOT FOUND IN DATASTREAM</p>;
Â  Â  }

Â  Â  const formattedDate = new Date(post.publishedAt).toLocaleDateString('en-US', {
Â  Â  Â  Â  year: 'numeric',
Â  Â  Â  Â  month: 'long',
Â  Â  Â  Â  day: 'numeric',
Â  Â  });

Â  Â  return (
Â  Â  Â  Â  // SCROLL FIX: Explicitly set height to viewport height minus the 64px (py-8) padding.
Â  Â  Â  Â  <div 
Â  Â  Â  Â  Â  Â  className="py-8 px-10 w-full overflow-y-auto"
Â  Â  Â  Â  Â  Â  style={{ height: 'calc(100vh - 64px)' }} 
Â  Â  Â  Â  > 
Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  {/* ðŸ›‘ CRITICAL GUARD CLAUSE FIX: Only render if asset reference exists ðŸ›‘ */}
Â  Â  Â  Â  Â  Â  {post.mainImage && post.mainImage.asset && post.mainImage.asset._ref && (
Â  Â  Â  Â  Â  Â  Â  Â  <div className="mb-8 border-b-2 border-green-400 pb-4">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Image
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="w-full h-auto object-cover border-2 border-green-400 p-1"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  // This is now safe because we checked for the '_ref'
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  src={urlForImage(post.mainImage).width(1200).url()} 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  alt={post.mainImage.alt || post.title}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  width={1200}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  height={600}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  priority
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  {/* Post Title */}
Â  Â  Â  Â  Â  Â  <h2 className="text-4xl text-yellow-400 mb-2 font-bold">{post.title}</h2>
Â  Â  Â  Â  Â  Â  <p className="text-xs mb-8 border-b border-green-400 pb-2">
Â  Â  Â  Â  Â  Â  Â  Â  LOGGED: {formattedDate} | STATUS: OK 
Â  Â  Â  Â  Â  Â  </p>

Â  Â  Â  Â  Â  Â  {/* Render Sanity's block content with custom components for images/links/styles */}
Â  Â  Â  Â  Â  Â  <div className="prose prose-terminal">
Â  Â  Â  Â  Â  Â  Â  Â  <PortableText 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  value={post.body} 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  components={components} 
Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  {/* Command Line Footer */}
Â  Â  Â  Â  Â  Â  <p className="mt-8 text-white font-bold">
Â  Â  Â  Â  Â  Â  Â  Â  C:\BLOG\READ_COMPLETE$: <span className="animate-pulse">_</span>
Â  Â  Â  Â  Â  Â  </p>
Â  Â  Â  Â  </div>
Â  Â  );
}